{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultPropTypes","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","App","showAddTask","setAddShowTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.112ea723.chunk.js","sourcesContent":["import Header from \"./Header\"\nimport PropTypes from 'prop-types'\n\n\nexport const Button = ({color, text, onClick}) => {\nreturn <button className=\"btn\" style={{ backgroundColor:color}} onClick={onClick}>{text}</button>\n}\nButton.defaultPropTypes ={\n    color: 'steelBlue',\n}\n\nButton.propTypes ={\n    text:PropTypes.string,\n    color:PropTypes.string,\n    onClick:PropTypes.func,\n}\n\nexport default Button;","\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\n\nconst Header = ({ title, onAdd, showAdd }) => {\n\n \n    return (\n      \n        \n        <header>\n\n            <h2>{title}</h2>\n            <Button color={showAdd? 'red': 'green'} text={showAdd? 'close window':'create task'} onClick={onAdd}/>\n\n        </header>\n\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Line UP Uganda\",\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\nexport default Header\n","import {FaTimes} from 'react-icons/fa';\n\nconst Task = ({task, onDelete, onToggle}) =>{\n    return(\n        <div className={`task ${task.reminder  ? 'reminder':''}`} onDoubleClick={()=>onToggle(task.id)}>\n            <h3>{task.text}<FaTimes style= {{color:'red', cursor:'pointer'}} onClick={()=>onDelete(task.id)}/></h3>\n    <p>{task.day}</p>\n        </div>\n    )\n} \n\nexport default Task","import {useState} from 'react';\n\n\nimport Task from './Task';\nconst Tasks = ({tasks, onDelete, onToggle}) =>{\n  \n    return(\n        <div className=\"container\">\n            {tasks.map((task)=>(\n            <Task key={task.id}  task={task} onDelete={onDelete} onToggle={onToggle}/>\n            ))}\n        </div>\n    )\n}\n\nexport default Tasks","import {useState} from 'react';\n\nconst AddTask = ({onAdd}) => {\n\n    const  [text, setText] = useState('');\n    const  [day, setDate] = useState('');\n    const  [reminder, setReminder] = useState(false);\n\n    // Submit\n    const onSubmit = (e) => {\n        e.preventDefault()\n    \n        if (!text) {\n          alert('Please add a task')\n          return\n        }\n    \n        onAdd({text, day, reminder})\n    \n        setText('')\n        setDate('')\n        setReminder(false)\n      }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Title</label>\n                <input type=\"text\" placeholder=\"Add task\"  value={text}onChange={(e) =>setText(e.target.value)}/>\n            </div>\n            <div className=\"form-control\">\n                <label>Day</label>\n                <input type=\"date\" placeholder=\"select date\" value={day} onChange={(e) => setDate(e.target.value)}/>\n            </div>\n            <div className=\"form-control-check\">\n                <label>Reminder</label>\n                <input type=\"checkbox\" value={reminder} checked={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)}/>\n            </div>\n            <input type=\"submit\" value =\"save\" className=\"btn btn-block\"/>\n        </form>\n    )\n}\n\n\nexport default AddTask","import React from 'react'\n\n const Footer = () => {\n    return (\n        <div className='Footer'>\n            <p>2021 &copy; lineup Uganda </p>\n        </div>\n    )\n}\n\nexport default Footer","import Header from './Components/Header';\nimport Tasks from './Components/Tasks';\nimport AddTask  from './Components/AddTask';\nimport Footer from './Components/Footer';\nimport {useState} from 'react';\n\n\nconst App =()=>{\n\n  const[showAddTask, setAddShowTask] = useState(false);\n\n  const [tasks, setTasks] =useState([\n\n    \n    {\n        id:1,\n        text: 'Organize notes & update my drive',\n        day: 'Feb 11 at 4:00pm',\n        reminder: true\n    },\n    {\n        id:2,\n        text: 'Meeting at work',\n        day: 'Feb 19 at 10:00am',\n        reminder: true\n    },\n    {\n        id:3,\n        text: 'Gadget shopping',\n        day: 'Feb 13 at 11:00am',\n        reminder: true\n    }\n])\n\n// Add Task\nconst addTask = (task) =>{\nconst id = Math.floor(Math.random() * 100 + 1)\nconst newTask = {id, ...task}\nsetTasks([newTask, ...tasks])\n\n}\n\n\n// delete task\nconst deleteTask = (id)=>{\nsetTasks(tasks.filter((task)=>task.id !== id))\n}\n\n// Task Reminder\nconst toggleReminder = (id) =>{\nsetTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder}: task))\n}\n\n  return (\n\n    \n    <div className=\"App\">\n    \n     <Header onAdd = {()=> setAddShowTask(!showAddTask)} showAdd ={showAddTask}/>\n\n     {showAddTask && <AddTask onAdd ={addTask}/>}\n    {tasks.length > 0? <Tasks tasks ={tasks} onDelete ={deleteTask} onToggle={toggleReminder} />: 'No tasks available'}\n    <Footer/>\n    </div>\n  );\n\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}